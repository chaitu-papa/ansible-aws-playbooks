{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation CustomerApp Template for Tomcat Application servers.",

  "Parameters" : {
    
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
 
    "KeyName" : {
      "Description" : "The EC2 Key Pair to allow SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "Default" : "DevOpsCOE-KeyPair",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "BaseImageId" : {
      "Description" : "Base image to be used to spin up ec2 instances",
      "Type" : "String",
      "Default" : "ami-7ee44204",
      "ConstraintDescription" : "must be the name of an existing AMI ID."
    },
    
    "InstanceSecurityGroup" : {
      "Description" : "Server security group",
      "Type" : "String",
      "Default" : "sg-a69a48d7",
      "ConstraintDescription" : "Server security group"
    },
    
    "MinInstances" : {
      "Description" : "Minimum number of instances in sacling group",
      "Type" : "String",
      "Default" : "1"
    },
    
    "MaxInstances" : {
      "Description" : "Maximum number of instances in sacling group",
      "Type" : "String",
      "Default" : "3"
    },   
    "Environment" : {
      "Description" : "Environment Name",
      "Type" : "String",
      "Default" : "DEV"
    },   
    
    "InstanceSubnets" : {
      "Description" : "A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon VPCs). The subnets that you specify for VPCZoneIdentifier must reside in the Availability Zones that you specify with the AvailabilityZones parameter.",
      "Default" : "subnet-82fc95ca,subnet-35f84b19,subnet-35f84b19",
      "Type" : "List<AWS::EC2::Subnet::Id>"
    },
     "ELBR53DNSName" : {
      "Description" : "DNS name for the ELB to be added in Route53. The final end endpoint for the ELB will be <ELBDNSName>.<AWS-Region>.<Environment>.<ELBHostedZone> .",
      "Type" : "String",
      "Default" : "customerApp"
    },
    "AppVersion" : {
      "Type" : "String",
      "Description" : "APPLICATION VERSION.",
      "AllowedPattern" : "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
      "ConstraintDescription" : "Must be a valid app version.",
      "Default" : "1.0.66"
    },
	
    "SSHLocation" : {      
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
    
	
  },

  "Resources" : {
    
    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : [ "us-east-1a" , "us-east-1b" ],
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : { "Ref" : "MinInstances"},
        "MaxSize" : { "Ref" : "MaxInstances"},
        "VPCZoneIdentifier" : { "Ref" : "InstanceSubnets" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ]
        
      },
       "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime" : "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    },
        
    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
             
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Ref" : "BaseImageId" },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
               "#!/bin/bash -x\n",
               "sudo su - \n",
               "export env_name=",
		{ "Ref" : "Environment" },"\n",
               "export app_version=",
		{ "Ref" : "AppVersion" },"\n",
               "cd /etc/init.d\n",
               "sh metricbeat restart\n",
               "sh filebeat restart\n",
               "sh tomcat start\n" ]   ]      }
        },
        "InstanceType" : { "Ref" : "InstanceType" }       
    }
    },
    
    "WebServerScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      }
    },
    
    "WebServerScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WebServerGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      }
    },

    "CPUAlarmHigh": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "90",
        "AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },
    
    "CPUAlarmLow": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "70",
        "AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "WebServerGroup" }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
         "Subnets" : { "Ref" : "InstanceSubnets" },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "CrossZone" : "true",
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "8080",
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:8080/",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "30",
          "Timeout" : "5"
        }
      }
    }

 },
	


  "Outputs" : {
    "ELBHTTPURL" : {
      "Description" : "Elastic LoadBalancer url",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]]}
    },
	"ELBURL" : {
      "Description" : "Elastic LoadBalancer url",
      "Value" :  { "Fn::Join" : [ "", [ "", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]]}
    }
  }
 
}





